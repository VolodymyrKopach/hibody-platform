import { useState, useCallback, useMemo } from 'react';
import { 
  PreviewState, 
  PreviewData, 
  PreviewElement, 
  AgeGroupConfig, 
  FormValues,
  IPreviewGenerator
} from '@/types/generation';

// === SOLID: SRP - –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—Ä–µ–≤—é ===

/**
 * –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—Ä–µ–≤—é –¥–ª—è —Å–∏—Å—Ç–µ–º–∏ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó
 * SOLID: SRP - –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ç—ñ–ª—å–∫–∏ –∑–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—é –ø—Ä–µ–≤—é
 * SOLID: DIP - —Ä–µ–∞–ª—ñ–∑—É—î —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å IPreviewGenerator
 */
class PreviewGenerator implements IPreviewGenerator {
  /**
   * –ì–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –ø—Ä–µ–≤—é –¥–ª—è –≤—ñ–∫–æ–≤–æ—ó –≥—Ä—É–ø–∏
   * SOLID: SRP - –æ–¥–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å: –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –ø—Ä–µ–≤—é
   */
  generatePreview(ageGroup: AgeGroupConfig, values: FormValues): PreviewData {
    return {
      ageGroup,
      characteristics: {
        fontSize: ageGroup.fontSize,
        layout: ageGroup.layout,
        audio: ageGroup.audio,
        estimatedDuration: ageGroup.timeRange
      },
      sampleSlide: this.generateSampleSlide(ageGroup, values)
    };
  }

  /**
   * –ì–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –ø—Ä–∏–∫–ª–∞–¥ —Å–ª–∞–π–¥—É
   * SOLID: SRP - –æ–¥–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å: –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Å–ª–∞–π–¥
   */
  generateSampleSlide(ageGroup: AgeGroupConfig, values: FormValues = {}): any {
    const elements = this.generateSampleElements(ageGroup);
    const title = this.generateSampleTitle(ageGroup, values);
    const content = this.generateSampleContent(ageGroup, values);

    return {
      title,
      content,
      elements
    };
  }

  /**
   * –ì–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç–∏ —Å–ª–∞–π–¥—É
   * SOLID: SRP - –æ–¥–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥–∞–ª—å–Ω—ñ—Å—Ç—å: –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –µ–ª–µ–º–µ–Ω—Ç–∏
   */
  generateSampleElements(ageGroup: AgeGroupConfig): PreviewElement[] {
    const elements: PreviewElement[] = [];
    
    // –ì–µ–Ω–µ—Ä—É—î–º–æ –µ–ª–µ–º–µ–Ω—Ç–∏ –≤ –∑–∞–ª–µ–∂–Ω–æ—Å—Ç—ñ –≤—ñ–¥ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω—å –≥—Ä—É–ø–∏
    for (let i = 0; i < ageGroup.layout.elementsPerSlide; i++) {
      elements.push({
        id: `element-${i}`,
        type: this.getElementType(ageGroup, i),
        content: this.getElementContent(ageGroup, i),
        style: {
          fontSize: i === 0 ? ageGroup.fontSize.primary : ageGroup.fontSize.secondary,
          color: '#333333',
          position: this.getElementPosition(ageGroup, i)
        }
      });
    }

    return elements;
  }

  // === SOLID: SRP - –î–æ–ø–æ–º—ñ–∂–Ω—ñ –º–µ—Ç–æ–¥–∏ ===

  /**
   * –û—Ç—Ä–∏–º–∞—Ç–∏ —Ç–∏–ø –µ–ª–µ–º–µ–Ω—Ç–∞ –¥–ª—è –ø–æ–∑–∏—Ü—ñ—ó
   */
  private getElementType(ageGroup: AgeGroupConfig, index: number): PreviewElement['type'] {
    if (index === 0) return 'text';
    if (ageGroup.audio.required && index === 1) return 'audio';
    if (ageGroup.layout.elementsPerSlide > 3 && index === 2) return 'image';
    return 'text';
  }

  /**
   * –û—Ç—Ä–∏–º–∞—Ç–∏ –∫–æ–Ω—Ç–µ–Ω—Ç –µ–ª–µ–º–µ–Ω—Ç–∞
   */
  private getElementContent(ageGroup: AgeGroupConfig, index: number): string {
    const samples = this.getSampleContent(ageGroup);
    return samples[index] || `–ï–ª–µ–º–µ–Ω—Ç ${index + 1}`;
  }

  /**
   * –û—Ç—Ä–∏–º–∞—Ç–∏ –ø–æ–∑–∏—Ü—ñ—é –µ–ª–µ–º–µ–Ω—Ç–∞
   */
  private getElementPosition(ageGroup: AgeGroupConfig, index: number): 'top' | 'center' | 'bottom' {
    if (index === 0) return 'top';
    if (ageGroup.layout.elementsPerSlide <= 3) return 'center';
    return index % 2 === 0 ? 'top' : 'bottom';
  }

  /**
   * –û—Ç—Ä–∏–º–∞—Ç–∏ –ø—Ä–∏–∫–ª–∞–¥–∏ –∫–æ–Ω—Ç–µ–Ω—Ç—É –¥–ª—è –≤—ñ–∫–æ–≤–æ—ó –≥—Ä—É–ø–∏
   */
  private getSampleContent(ageGroup: AgeGroupConfig): string[] {
    const samples: Record<string, string[]> = {
      '2-3': [
        'üê∂ –°–æ–±–∞—á–∫–∞',
        'üéµ –ì–∞–≤-–≥–∞–≤!',
        'üåà –ö–æ–ª—å–æ—Ä–∏'
      ],
      '4-6': [
        'üìö –í–∏–≤—á–∞—î–º–æ –±—É–∫–≤—É –ê',
        'üî§ –ê-–∞-–∞-–∞',
        'üçé –Ø–±–ª—É–∫–æ',
        '‚úèÔ∏è –ó–∞–≤–¥–∞–Ω–Ω—è'
      ],
      '7-8': [
        'üî¢ –ú–∞—Ç–µ–º–∞—Ç–∏–∫–∞: 2 + 3 = ?',
        '‚úÖ –ü—Ä–∞–≤–∏–ª—å–Ω–∞ –≤—ñ–¥–ø–æ–≤—ñ–¥—å: 5',
        'üéØ –ù–∞—Å—Ç—É–ø–Ω–µ –∑–∞–≤–¥–∞–Ω–Ω—è',
        'üìù –ó–∞–ø–∏—à—ñ—Ç—å —É –∑–æ—à–∏—Ç',
        'üéÆ –ì—Ä–∞ –∑ —Ü–∏—Ñ—Ä–∞–º–∏'
      ],
      '9-10': [
        'üß† –õ–æ–≥—ñ—á–Ω–∞ –∑–∞–¥–∞—á–∞',
        'üìä –î–∞–Ω—ñ –¥–ª—è –∞–Ω–∞–ª—ñ–∑—É',
        'üí° –ü—ñ–¥–∫–∞–∑–∫–∞',
        'üìù –†—ñ—à–µ–Ω–Ω—è –∑–∞–¥–∞—á—ñ',
        'üîç –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞',
        'üìà –ì—Ä–∞—Ñ—ñ–∫',
        'üéØ –í–∏—Å–Ω–æ–≤–æ–∫',
        'üìö –î–æ–¥–∞—Ç–∫–æ–≤–∞ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è'
      ]
    };

    return samples[ageGroup.id] || ['–ü—Ä–∏–∫–ª–∞–¥ –∫–æ–Ω—Ç–µ–Ω—Ç—É'];
  }

  /**
   * –ì–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –∑–∞–≥–æ–ª–æ–≤–æ–∫ —Å–ª–∞–π–¥—É
   */
  private generateSampleTitle(ageGroup: AgeGroupConfig, values: FormValues): string {
    const titles: Record<string, string> = {
      '2-3': 'üåü –î–∞–≤–∞–π—Ç–µ –ø—ñ–∑–Ω–∞–≤–∞—Ç–∏ —Å–≤—ñ—Ç!',
      '4-6': 'üìö –ù–∞–≤—á–∞—î–º–æ—Å—è –≥—Ä–∞—é—á–∏',
      '7-8': 'üéØ –®–∫–æ–ª—è—Ä—Å—å–∫–∏–π —É—Ä–æ–∫',
      '9-10': 'üß† –ü–æ–≥–ª–∏–±–ª–µ–Ω–µ –Ω–∞–≤—á–∞–Ω–Ω—è'
    };

    return titles[ageGroup.id] || '–ù–∞–≤—á–∞–ª—å–Ω–∏–π –º–∞—Ç–µ—Ä—ñ–∞–ª';
  }

  /**
   * –ì–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ –æ–ø–∏—Å –∫–æ–Ω—Ç–µ–Ω—Ç—É
   */
  private generateSampleContent(ageGroup: AgeGroupConfig, values: FormValues): string {
    const descriptions: Record<string, string> = {
      '2-3': '–ü—Ä–æ—Å—Ç–∏–π —ñ –∑—Ä–æ–∑—É–º—ñ–ª–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç –∑ –≤–µ–ª–∏–∫–∏–º–∏ —è—Å–∫—Ä–∞–≤–∏–º–∏ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏',
      '4-6': '–Ü–≥—Ä–æ–≤–∏–π –ø—ñ–¥—Ö—ñ–¥ –¥–æ –Ω–∞–≤—á–∞–Ω–Ω—è –∑ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–º–∏ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏',
      '7-8': '–°—Ç—Ä—É–∫—Ç—É—Ä–æ–≤–∞–Ω–∏–π –º–∞—Ç–µ—Ä—ñ–∞–ª –∑ –ø–æ—è—Å–Ω–µ–Ω–Ω—è–º–∏ —Ç–∞ –ø—Ä–∏–∫–ª–∞–¥–∞–º–∏',
      '9-10': '–î–µ—Ç–∞–ª—å–Ω–∏–π –∞–Ω–∞–ª—ñ–∑ –∑ –¥–æ–¥–∞—Ç–∫–æ–≤–∏–º–∏ –º–∞—Ç–µ—Ä—ñ–∞–ª–∞–º–∏ –¥–ª—è –ø–æ–≥–ª–∏–±–ª–µ–Ω–æ–≥–æ –≤–∏–≤—á–µ–Ω–Ω—è'
    };

    return descriptions[ageGroup.id] || '–ù–∞–≤—á–∞–ª—å–Ω–∏–π –∫–æ–Ω—Ç–µ–Ω—Ç';
  }
}

// === Main Hook ===

/**
 * –•—É–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª—ñ–Ω–Ω—è –ø—Ä–µ–≤—é –ø–æ –∑–∞–ø–∏—Ç—É
 * SOLID: SRP - –≤—ñ–¥–ø–æ–≤—ñ–¥–∞—î —Ç—ñ–ª—å–∫–∏ –∑–∞ —Å—Ç–∞–Ω –ø—Ä–µ–≤—é
 * SOLID: DIP - –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É—î –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–∏–π –≥–µ–Ω–µ—Ä–∞—Ç–æ—Ä
 */
export function usePreview(ageGroup: AgeGroupConfig | null, values: FormValues) {
  // === SOLID: SRP - –°—Ç–∞–Ω –ø—Ä–µ–≤—é ===
  const [previewState, setPreviewState] = useState<PreviewState>({
    visible: false,
    loading: false,
    data: null,
    error: null
  });

  // === SOLID: SRP - –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –ø—Ä–µ–≤—é ===
  const generator = useMemo(() => new PreviewGenerator(), []);

  // === SOLID: SRP - –ü–æ–∫–∞–∑–∞—Ç–∏ –ø—Ä–µ–≤—é ===
  const showPreview = useCallback(async () => {
    if (!ageGroup) {
      setPreviewState(prev => ({
        ...prev,
        visible: true,
        error: '–ù–µ –≤–∏–±—Ä–∞–Ω–æ –≤—ñ–∫–æ–≤—É –≥—Ä—É–ø—É'
      }));
      return;
    }

    setPreviewState(prev => ({
      ...prev,
      visible: true,
      loading: true,
      error: null
    }));

    try {
      // –°–∏–º—É–ª—è—Ü—ñ—è –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó (–º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –∑–∞—Ç—Ä–∏–º–∫—É –¥–ª—è —Ä–µ–∞–ª—ñ—Å—Ç–∏—á–Ω–æ—Å—Ç—ñ)
      await new Promise(resolve => setTimeout(resolve, 500));
      
      const previewData = generator.generatePreview(ageGroup, values);
      
      setPreviewState(prev => ({
        ...prev,
        loading: false,
        data: previewData
      }));
    } catch (error) {
      setPreviewState(prev => ({
        ...prev,
        loading: false,
        error: error instanceof Error ? error.message : '–ü–æ–º–∏–ª–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü—ñ—ó –ø—Ä–µ–≤—é'
      }));
    }
  }, [ageGroup, values, generator]);

  // === SOLID: SRP - –°—Ö–æ–≤–∞—Ç–∏ –ø—Ä–µ–≤—é ===
  const hidePreview = useCallback(() => {
    setPreviewState({
      visible: false,
      loading: false,
      data: null,
      error: null
    });
  }, []);

  // === SOLID: SRP - –û–Ω–æ–≤–∏—Ç–∏ –ø—Ä–µ–≤—é ===
  const refreshPreview = useCallback(async () => {
    if (!previewState.visible) return;
    await showPreview();
  }, [previewState.visible, showPreview]);

  // === SOLID: SRP - –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ ===
  const canShowPreview = useMemo(() => {
    return ageGroup !== null && !previewState.loading;
  }, [ageGroup, previewState.loading]);

  // === SOLID: SRP - –°—Ç–∞—Ç—É—Å –ø—Ä–µ–≤—é ===
  const previewStatus = useMemo(() => {
    if (previewState.loading) return 'loading';
    if (previewState.error) return 'error';
    if (previewState.data) return 'success';
    return 'idle';
  }, [previewState.loading, previewState.error, previewState.data]);

  // === SOLID: SRP - –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Ö–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫ ===
  const getCharacteristics = useCallback(() => {
    return previewState.data?.characteristics || null;
  }, [previewState.data]);

  // === SOLID: SRP - –û—Ç—Ä–∏–º–∞–Ω–Ω—è —Å–ª–∞–π–¥—É ===
  const getSampleSlide = useCallback(() => {
    return previewState.data?.sampleSlide || null;
  }, [previewState.data]);

  // === API —Ö—É–∫–∞ ===
  return {
    // –°—Ç–∞–Ω
    previewState,
    previewStatus,
    
    // –î—ñ—ó
    showPreview,
    hidePreview,
    refreshPreview,
    
    // –ü–µ—Ä–µ–≤—ñ—Ä–∫–∏
    canShowPreview,
    
    // –î–∞–Ω—ñ
    getCharacteristics,
    getSampleSlide,
    
    // –†–æ–∑—à–∏—Ä–µ–Ω—ñ –≤–ª–∞—Å—Ç–∏–≤–æ—Å—Ç—ñ –¥–ª—è –∑—Ä—É—á–Ω–æ—Å—Ç—ñ
    isVisible: previewState.visible,
    isLoading: previewState.loading,
    hasError: !!previewState.error,
    hasData: !!previewState.data,
    error: previewState.error,
    data: previewState.data,
    
    // –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –¥–ª—è —Ä–æ–∑—à–∏—Ä–µ–Ω–Ω—è
    generator
  };
}

// === –¢–∏–ø–∏ –¥–ª—è –µ–∫—Å–ø–æ—Ä—Ç—É ===
export type UsePreviewReturn = ReturnType<typeof usePreview>;
export { PreviewGenerator }; 