'use client'

import React, { useState } from 'react'
import { Box, Button, Card, CardContent, Typography, Stack, Chip } from '@mui/material'
import { LoadingScreen, PageLoader } from '@/components/ui'

export const LoadingTest: React.FC = () => {
  const [showFullScreenLoader, setShowFullScreenLoader] = useState(false)
  const [showPageLoader, setShowPageLoader] = useState(false)
  const [infiniteFullScreen, setInfiniteFullScreen] = useState(false)
  const [infinitePageLoader, setInfinitePageLoader] = useState(false)

  const handleShowFullScreenLoader = () => {
    if (infiniteFullScreen) {
      // –Ø–∫—â–æ –≤–∫–ª—é—á–µ–Ω–∏–π –≤—ñ—á–Ω–∏–π —Ä–µ–∂–∏–º, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–º–∏–∫–∞—î–º–æ
      setShowFullScreenLoader(!showFullScreenLoader)
    } else {
      // –ó–≤–∏—á–∞–π–Ω–∏–π —Ä–µ–∂–∏–º –∑ —Ç–∞–π–º–µ—Ä–æ–º
      setShowFullScreenLoader(true)
      setTimeout(() => {
        setShowFullScreenLoader(false)
      }, 4000)
    }
  }

  const handleShowPageLoader = () => {
    if (infinitePageLoader) {
      // –Ø–∫—â–æ –≤–∫–ª—é—á–µ–Ω–∏–π –≤—ñ—á–Ω–∏–π —Ä–µ–∂–∏–º, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–º–∏–∫–∞—î–º–æ
      setShowPageLoader(!showPageLoader)
    } else {
      // –ó–≤–∏—á–∞–π–Ω–∏–π —Ä–µ–∂–∏–º –∑ —Ç–∞–π–º–µ—Ä–æ–º
      setShowPageLoader(true)
      setTimeout(() => {
        setShowPageLoader(false)
      }, 3000)
    }
  }

  const toggleInfiniteFullScreen = () => {
    setInfiniteFullScreen(!infiniteFullScreen)
    if (showFullScreenLoader && !infiniteFullScreen) {
      // –Ø–∫—â–æ –ª–æ–∞–¥–µ—Ä –∞–∫—Ç–∏–≤–Ω–∏–π —ñ –º–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º–æ –≤ –≤—ñ—á–Ω–∏–π —Ä–µ–∂–∏–º, –∑–∞–ª–∏—à–∞—î–º–æ –π–æ–≥–æ
      return
    }
    if (showFullScreenLoader && infiniteFullScreen) {
      // –Ø–∫—â–æ –≤–∏—Ö–æ–¥–∏–º–æ –∑ –≤—ñ—á–Ω–æ–≥–æ —Ä–µ–∂–∏–º—É, –≤–∏–º–∏–∫–∞—î–º–æ –ª–æ–∞–¥–µ—Ä
      setShowFullScreenLoader(false)
    }
  }

  const toggleInfinitePageLoader = () => {
    setInfinitePageLoader(!infinitePageLoader)
    if (showPageLoader && !infinitePageLoader) {
      // –Ø–∫—â–æ –ª–æ–∞–¥–µ—Ä –∞–∫—Ç–∏–≤–Ω–∏–π —ñ –º–∏ –ø–µ—Ä–µ—Ö–æ–¥–∏–º–æ –≤ –≤—ñ—á–Ω–∏–π —Ä–µ–∂–∏–º, –∑–∞–ª–∏—à–∞—î–º–æ –π–æ–≥–æ
      return
    }
    if (showPageLoader && infinitePageLoader) {
      // –Ø–∫—â–æ –≤–∏—Ö–æ–¥–∏–º–æ –∑ –≤—ñ—á–Ω–æ–≥–æ —Ä–µ–∂–∏–º—É, –≤–∏–º–∏–∫–∞—î–º–æ –ª–æ–∞–¥–µ—Ä
      setShowPageLoader(false)
    }
  }

  return (
    <Card>
      <CardContent>
        <Typography variant="h6" gutterBottom>
          –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è Loading –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤ –∑ –∞–Ω—ñ–º–∞—Ü—ñ—è–º–∏
        </Typography>
        
        <Stack spacing={3}>
          {/* Full Screen Loader */}
          <Box>
            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>
              <Typography variant="body2" color="text.secondary">
                üåä –•–≤–∏–ª—è—Å—Ç–∞ –∞–Ω—ñ–º–∞—Ü—ñ—è –ø–æ–≤–Ω–æ–µ–∫—Ä–∞–Ω–Ω–æ–≥–æ –ª–æ–≥–æ—Ç–∏–ø—É (Hi)
              </Typography>
              {infiniteFullScreen && (
                <Chip 
                  label="‚ôæÔ∏è –í—ñ—á–Ω–∏–π —Ä–µ–∂–∏–º" 
                  size="small" 
                  color="primary" 
                  variant="outlined"
                />
              )}
            </Box>
            
            <Stack direction="row" spacing={1} sx={{ mb: 1 }}>
              <Button 
                variant="contained" 
                onClick={handleShowFullScreenLoader}
                disabled={showFullScreenLoader && !infiniteFullScreen}
              >
                {showFullScreenLoader 
                  ? (infiniteFullScreen ? '–°—Ö–æ–≤–∞—Ç–∏ Loading Screen' : 'Loading Screen –∞–∫—Ç–∏–≤–Ω–∏–π') 
                  : (infiniteFullScreen ? '–ü–æ–∫–∞–∑–∞—Ç–∏ Loading Screen' : '–ü–æ–∫–∞–∑–∞—Ç–∏ Loading Screen (4 —Å–µ–∫)')
                }
              </Button>
              
              <Button 
                variant={infiniteFullScreen ? "contained" : "outlined"}
                color={infiniteFullScreen ? "secondary" : "primary"}
                onClick={toggleInfiniteFullScreen}
              >
                {infiniteFullScreen ? '‚èπÔ∏è –í–∏–º–∫–Ω—É—Ç–∏ –≤—ñ—á–Ω–∏–π' : '‚ôæÔ∏è –í—ñ—á–Ω–∏–π —Ä–µ–∂–∏–º'}
              </Button>
            </Stack>
          </Box>

          {/* Page Loader */}
          <Box>
            <Box sx={{ display: 'flex', alignItems: 'center', gap: 1, mb: 1 }}>
              <Typography variant="body2" color="text.secondary">
                ‚ú® –ê–Ω—ñ–º–æ–≤–∞–Ω—ñ –∫—Ä–∞–ø–∫–∏ –¥–ª—è –≤–±—É–¥–æ–≤–∞–Ω–æ–≥–æ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è
              </Typography>
              {infinitePageLoader && (
                <Chip 
                  label="‚ôæÔ∏è –í—ñ—á–Ω–∏–π —Ä–µ–∂–∏–º" 
                  size="small" 
                  color="primary" 
                  variant="outlined"
                />
              )}
            </Box>
            
            <Stack direction="row" spacing={1} sx={{ mb: 1 }}>
              <Button 
                variant="outlined" 
                onClick={handleShowPageLoader}
                disabled={showPageLoader && !infinitePageLoader}
              >
                {showPageLoader 
                  ? (infinitePageLoader ? '–°—Ö–æ–≤–∞—Ç–∏ Page Loader' : 'Page Loader –∞–∫—Ç–∏–≤–Ω–∏–π') 
                  : (infinitePageLoader ? '–ü–æ–∫–∞–∑–∞—Ç–∏ Page Loader' : '–ü–æ–∫–∞–∑–∞—Ç–∏ Page Loader (3 —Å–µ–∫)')
                }
              </Button>
              
              <Button 
                variant={infinitePageLoader ? "contained" : "outlined"}
                color={infinitePageLoader ? "secondary" : "primary"}
                onClick={toggleInfinitePageLoader}
                size="small"
              >
                {infinitePageLoader ? '‚èπÔ∏è –í–∏–º–∫–Ω—É—Ç–∏ –≤—ñ—á–Ω–∏–π' : '‚ôæÔ∏è –í—ñ—á–Ω–∏–π —Ä–µ–∂–∏–º'}
              </Button>
            </Stack>

            {showPageLoader && (
              <Box sx={{ py: 2 }}>
                <PageLoader size="medium" />
              </Box>
            )}
          </Box>

          {/* Size Examples */}
          <Box>
            <Typography variant="body2" color="text.secondary" gutterBottom>
              üìè –†—ñ–∑–Ω—ñ —Ä–æ–∑–º—ñ—Ä–∏ –∞–Ω—ñ–º–æ–≤–∞–Ω–∏—Ö –∫—Ä–∞–ø–æ–∫:
            </Typography>
            <Stack direction="row" spacing={2} alignItems="center">
              <Box sx={{ textAlign: 'center' }}>
                <Typography variant="caption" display="block" gutterBottom>
                  –ú–∞–ª–∏–π
                </Typography>
                <PageLoader size="small" />
              </Box>
              <Box sx={{ textAlign: 'center' }}>
                <Typography variant="caption" display="block" gutterBottom>
                  –°–µ—Ä–µ–¥–Ω—ñ–π
                </Typography>
                <PageLoader size="medium" />
              </Box>
              <Box sx={{ textAlign: 'center' }}>
                <Typography variant="caption" display="block" gutterBottom>
                  –í–µ–ª–∏–∫–∏–π
                </Typography>
                <PageLoader size="large" />
              </Box>
            </Stack>
          </Box>

          {/* Features Info */}
          <Box>
            <Typography variant="body2" color="text.secondary">
              üí° –û—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ –Ω–æ–≤–∏—Ö –∞–Ω—ñ–º–∞—Ü—ñ–π:
              <br />
              ‚Ä¢ –õ–æ–≥–æ—Ç–∏–ø "Hi" –º–∞—î —Ö–≤–∏–ª—è—Å—Ç—É –∞–Ω—ñ–º–∞—Ü—ñ—é –∑ —Ä–æ—Ç–∞—Ü—ñ—î—é —Ç–∞ –º–∞—Å—à—Ç–∞–±—É–≤–∞–Ω–Ω—è–º
              <br />
              ‚Ä¢ –ì—Ä–∞–¥—ñ—î–Ω—Ç–Ω–∏–π —Ñ–æ–Ω –∑–º—ñ–Ω—é—î –∫–æ–ª—å–æ—Ä–∏ –ø–ª–∞–≤–Ω–æ
              <br />
              ‚Ä¢ –ö—Ä—É–≥–ª–∏–π "halo" –µ—Ñ–µ–∫—Ç –Ω–∞–≤–∫–æ–ª–æ –ª–æ–≥–æ—Ç–∏–ø—É –∑–∞–º—ñ—Å—Ç—å –∫–≤–∞–¥—Ä–∞—Ç–Ω–æ–≥–æ
              <br />
              ‚Ä¢ –ö—Ä–∞–ø–∫–∏ –≤ PageLoader –ø—É–ª—å—Å—É—é—Ç—å –∑ –∑–∞—Ç—Ä–∏–º–∫–æ—é –¥–ª—è —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ö–≤–∏–ª—ñ
              <br />
              ‚Ä¢ –ü—Ä–∏–±—Ä–∞–Ω–æ –≤—Å—ñ —Ç–µ–∫—Å—Ç–æ–≤—ñ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –¥–ª—è —á–∏—Å—Ç–æ–≥–æ –¥–∏–∑–∞–π–Ω—É
              <br />
              ‚Ä¢ ‚ôæÔ∏è <strong>–í—ñ—á–Ω–∏–π —Ä–µ–∂–∏–º</strong> - –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –∞–Ω—ñ–º–∞—Ü—ñ–π
            </Typography>
          </Box>
        </Stack>
      </CardContent>

      {showFullScreenLoader && (
        <LoadingScreen />
      )}
    </Card>
  )
} 