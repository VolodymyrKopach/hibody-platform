'use client';

import React, { useState } from 'react';
import {
  Box,
  Card,
  CardContent,
  Typography,
  Button,
  Alert,
  Stack,
  Paper,
  Divider
} from '@mui/material';

export const CreateTestData: React.FC = () => {
  const [message, setMessage] = useState<string>('');

  const createTestLessons = () => {
    const testLessons = [
      {
        id: 'lesson_test_1',
        title: '–¢–µ—Å—Ç–æ–≤–∏–π —É—Ä–æ–∫ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏',
        description: '–£—Ä–æ–∫ –ø—Ä–æ –æ—Å–Ω–æ–≤–∏ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏ –¥–ª—è –¥—ñ—Ç–µ–π',
        targetAge: '6-7',
        subject: '–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
        duration: 45,
        status: 'planning',
        slides: [
          {
            id: 'slide_test_1_1',
            number: 1,
            title: '–í—Å—Ç—É–ø –¥–æ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏',
            description: '–ó–Ω–∞–π–æ–º—Å—Ç–≤–æ –∑ —Ü–∏—Ñ—Ä–∞–º–∏',
            type: 'welcome',
            icon: 'üî¢',
            status: 'ready',
            preview: '–ü—Ä–∏–≤—ñ—Ç! –°—å–æ–≥–æ–¥–Ω—ñ –º–∏ –≤–∏–≤—á–∞—î–º–æ —Ü–∏—Ñ—Ä–∏!',
            _internal: {
              filename: 'slide_1.html',
              htmlContent: '<h1>–ü—Ä–∏–≤—ñ—Ç! –°—å–æ–≥–æ–¥–Ω—ñ –º–∏ –≤–∏–≤—á–∞—î–º–æ —Ü–∏—Ñ—Ä–∏!</h1>',
              dependencies: [],
              lastModified: new Date(),
              version: 1
            },
            createdAt: new Date(),
            updatedAt: new Date()
          },
          {
            id: 'slide_test_1_2',
            number: 2,
            title: '–¶–∏—Ñ—Ä–∞ 1',
            description: '–í–∏–≤—á–∞—î–º–æ —Ü–∏—Ñ—Ä—É –æ–¥–∏–Ω',
            type: 'content',
            icon: '1Ô∏è‚É£',
            status: 'ready',
            preview: '–¶–µ —Ü–∏—Ñ—Ä–∞ 1. –í–æ–Ω–∞ –æ–∑–Ω–∞—á–∞—î –æ–¥–∏–Ω –ø—Ä–µ–¥–º–µ—Ç.',
            _internal: {
              filename: 'slide_2.html',
              htmlContent: '<h1>–¶–µ —Ü–∏—Ñ—Ä–∞ 1</h1><p>–í–æ–Ω–∞ –æ–∑–Ω–∞—á–∞—î –æ–¥–∏–Ω –ø—Ä–µ–¥–º–µ—Ç.</p>',
              dependencies: [],
              lastModified: new Date(),
              version: 1
            },
            createdAt: new Date(),
            updatedAt: new Date()
          }
        ],
        _internal: {
          projectPath: '/test/lesson_1',
          files: [],
          structure: {},
          metadata: {
            lessonTitle: '–¢–µ—Å—Ç–æ–≤–∏–π —É—Ä–æ–∫ –º–∞—Ç–µ–º–∞—Ç–∏–∫–∏',
            targetAge: '6-7',
            subject: '–º–∞—Ç–µ–º–∞—Ç–∏–∫–∞',
            duration: 45,
            slidesCount: 2,
            language: 'uk',
            createdBy: 'test',
            version: '1.0'
          },
          lastSync: new Date()
        },
        createdAt: new Date(),
        updatedAt: new Date()
      },
      {
        id: 'lesson_test_2',
        title: '–£—Ä–æ–∫ –ø—Ä–∏—Ä–æ–¥–æ–∑–Ω–∞–≤—Å—Ç–≤–∞',
        description: '–í–∏–≤—á–∞—î–º–æ —Ç–≤–∞—Ä–∏–Ω –ª—ñ—Å—É',
        targetAge: '8-9',
        subject: '–ø—Ä–∏—Ä–æ–¥–æ–∑–Ω–∞–≤—Å—Ç–≤–æ',
        duration: 30,
        status: 'ready',
        slides: [
          {
            id: 'slide_test_2_1',
            number: 1,
            title: '–¢–≤–∞—Ä–∏–Ω–∏ –ª—ñ—Å—É',
            description: '–ó–Ω–∞–π–æ–º—Å—Ç–≤–æ –∑ –ª—ñ—Å–æ–≤–∏–º–∏ —Ç–≤–∞—Ä–∏–Ω–∞–º–∏',
            type: 'welcome',
            icon: 'üêª',
            status: 'ready',
            preview: '–î–∞–≤–∞–π—Ç–µ –¥—ñ–∑–Ω–∞—î–º–æ—Å—è –ø—Ä–æ —Ç–≤–∞—Ä–∏–Ω, —â–æ –∂–∏–≤—É—Ç—å —É –ª—ñ—Å—ñ!',
            _internal: {
              filename: 'slide_1.html',
              htmlContent: '<h1>–¢–≤–∞—Ä–∏–Ω–∏ –ª—ñ—Å—É</h1><p>–î–∞–≤–∞–π—Ç–µ –¥—ñ–∑–Ω–∞—î–º–æ—Å—è –ø—Ä–æ —Ç–≤–∞—Ä–∏–Ω, —â–æ –∂–∏–≤—É—Ç—å —É –ª—ñ—Å—ñ!</p>',
              dependencies: [],
              lastModified: new Date(),
              version: 1
            },
            createdAt: new Date(),
            updatedAt: new Date()
          }
        ],
        _internal: {
          projectPath: '/test/lesson_2',
          files: [],
          structure: {},
          metadata: {
            lessonTitle: '–£—Ä–æ–∫ –ø—Ä–∏—Ä–æ–¥–æ–∑–Ω–∞–≤—Å—Ç–≤–∞',
            targetAge: '8-9',
            subject: '–ø—Ä–∏—Ä–æ–¥–æ–∑–Ω–∞–≤—Å—Ç–≤–æ',
            duration: 30,
            slidesCount: 1,
            language: 'uk',
            createdBy: 'test',
            version: '1.0'
          },
          lastSync: new Date()
        },
        createdAt: new Date(),
        updatedAt: new Date()
      }
    ];

    try {
      localStorage.setItem('lessons', JSON.stringify(testLessons));
      setMessage('‚úÖ –¢–µ—Å—Ç–æ–≤—ñ —É—Ä–æ–∫–∏ —Å—Ç–≤–æ—Ä–µ–Ω—ñ –≤ localStorage');
    } catch (error) {
      setMessage('‚ùå –ü–æ–º–∏–ª–∫–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö –¥–∞–Ω–∏—Ö: ' + (error instanceof Error ? error.message : 'Unknown error'));
    }
  };

  const clearLocalStorage = () => {
    try {
      localStorage.removeItem('lessons');
      localStorage.removeItem('slides');
      localStorage.removeItem('currentLesson');
      setMessage('üóëÔ∏è localStorage –æ—á–∏—â–µ–Ω–æ');
    } catch (error) {
      setMessage('‚ùå –ü–æ–º–∏–ª–∫–∞ –æ—á–∏—â–µ–Ω–Ω—è: ' + (error instanceof Error ? error.message : 'Unknown error'));
    }
  };

  const checkLocalStorage = () => {
    try {
      const lessons = localStorage.getItem('lessons');
      const slides = localStorage.getItem('slides');
      
      if (lessons) {
        const parsedLessons = JSON.parse(lessons);
        setMessage(`üìä –ó–Ω–∞–π–¥–µ–Ω–æ ${parsedLessons.length} —É—Ä–æ–∫—ñ–≤ –≤ localStorage`);
      } else {
        setMessage('üì≠ –ù–µ–º–∞—î —É—Ä–æ–∫—ñ–≤ –≤ localStorage');
      }
    } catch (error) {
      setMessage('‚ùå –ü–æ–º–∏–ª–∫–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏: ' + (error instanceof Error ? error.message : 'Unknown error'));
    }
  };

  return (
    <Box sx={{ maxWidth: 600, mx: 'auto', p: 3 }}>
      <Paper sx={{ p: 3 }}>
        <Typography variant="h5" gutterBottom>
          üß™ –¢–µ—Å—Ç–æ–≤—ñ –¥–∞–Ω—ñ –¥–ª—è –º—ñ–≥—Ä–∞—Ü—ñ—ó
        </Typography>

        <Typography variant="body2" color="text.secondary" sx={{ mb: 3 }}>
          –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Ç–µ—Å—Ç–æ–≤–∏—Ö —É—Ä–æ–∫—ñ–≤ –≤ localStorage –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è –º—ñ–≥—Ä–∞—Ü—ñ—ó –¥–æ Supabase
        </Typography>

        <Stack spacing={2} sx={{ mb: 3 }}>
          <Button
            variant="contained"
            onClick={createTestLessons}
            color="primary"
          >
            –°—Ç–≤–æ—Ä–∏—Ç–∏ —Ç–µ—Å—Ç–æ–≤—ñ —É—Ä–æ–∫–∏
          </Button>

          <Button
            variant="outlined"
            onClick={checkLocalStorage}
            color="info"
          >
            –ü–µ—Ä–µ–≤—ñ—Ä–∏—Ç–∏ localStorage
          </Button>

          <Button
            variant="outlined"
            onClick={clearLocalStorage}
            color="error"
          >
            –û—á–∏—Å—Ç–∏—Ç–∏ localStorage
          </Button>
        </Stack>

        <Divider sx={{ my: 2 }} />

        <Typography variant="h6" gutterBottom>
          –©–æ –±—É–¥–µ —Å—Ç–≤–æ—Ä–µ–Ω–æ:
        </Typography>

        <Typography variant="body2" component="div" sx={{ mb: 2 }}>
          ‚Ä¢ 2 —Ç–µ—Å—Ç–æ–≤–∏—Ö —É—Ä–æ–∫–∏<br />
          ‚Ä¢ 3 —Ç–µ—Å—Ç–æ–≤–∏—Ö —Å–ª–∞–π–¥–∏<br />
          ‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω–∞ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ –¥–∞–Ω–∏—Ö –¥–ª—è –º—ñ–≥—Ä–∞—Ü—ñ—ó
        </Typography>

        {message && (
          <Alert severity={message.includes('‚ùå') ? 'error' : message.includes('‚ö†Ô∏è') ? 'warning' : 'success'}>
            {message}
          </Alert>
        )}
      </Paper>
    </Box>
  );
};

export default CreateTestData; 