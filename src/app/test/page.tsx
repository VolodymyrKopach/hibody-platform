'use client';

import React, { useState } from 'react';
import { 
  Box, 
  Container, 
  Typography, 
  Tabs,
  Tab,
  Button,
  Alert
} from '@mui/material';
import { useRouter } from 'next/navigation';

// Layout
import Layout from '@/components/layout/Layout';

// Test components
import SnapdomTest from '@/components/debug/SnapdomTest';

interface TabPanelProps {
  children?: React.ReactNode;
  index: number;
  value: number;
}

function TabPanel(props: TabPanelProps) {
  const { children, value, index, ...other } = props;

  return (
    <div
      role="tabpanel"
      hidden={value !== index}
      id={`test-tabpanel-${index}`}
      aria-labelledby={`test-tab-${index}`}
      {...other}
    >
      {value === index && (
        <Box sx={{ py: 3 }}>
          {children}
        </Box>
      )}
    </div>
  );
}

// Error Test Component
const ErrorTestComponent: React.FC = () => {
  const [showError, setShowError] = useState(false);
  const router = useRouter();

  const triggerError = () => {
    throw new Error('–¢–µ—Å—Ç–æ–≤–∞ –ø–æ–º–∏–ª–∫–∞ –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ —Å–∏—Å—Ç–µ–º–∏ –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫');
  };

  const triggerAsyncError = async () => {
    setShowError(true);
    setTimeout(() => {
      throw new Error('–ê—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–∞ —Ç–µ—Å—Ç–æ–≤–∞ –ø–æ–º–∏–ª–∫–∞');
    }, 1000);
  };

  const goToErrorPage = () => {
    // –ü–µ—Ä–µ—Ö—ñ–¥ –Ω–∞ —Ç–µ—Å—Ç–æ–≤—É —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø–æ–º–∏–ª–∫–∏
    router.push('/error-page?test=true');
  };

  return (
    <Box>
      <Typography variant="h5" gutterBottom>
        üß™ –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏ –æ–±—Ä–æ–±–∫–∏ –ø–æ–º–∏–ª–æ–∫
      </Typography>
      
      <Typography variant="body2" sx={{ mb: 3, color: 'text.secondary' }}>
        –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –Ω–∏–∂—á–µ –¥–ª—è —Ç–µ—Å—Ç—É–≤–∞–Ω–Ω—è —Ä—ñ–∑–Ω–∏—Ö —Ç–∏–ø—ñ–≤ –ø–æ–º–∏–ª–æ–∫ —Ç–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ 
        –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω—Ü—ñ –ø–æ–º–∏–ª–∫–∏.
      </Typography>

      <Alert severity="info" sx={{ mb: 3 }}>
        <Typography variant="body2">
          <strong>–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—è:</strong> –°–ø–æ—á–∞—Ç–∫—É —Å–∫–æ—Ä–∏—Å—Ç–∞–π—Ç–µ—Å—è —Å–∏–Ω—å–æ—é –∫–Ω–æ–ø–∫–æ—é –¥–ª—è –±–µ–∑–ø–µ—á–Ω–æ–≥–æ 
          –ø–µ—Ä–µ–≥–ª—è–¥—É —Å—Ç–æ—Ä—ñ–Ω–∫–∏ –ø–æ–º–∏–ª–∫–∏. –ß–µ—Ä–≤–æ–Ω—ñ –∫–Ω–æ–ø–∫–∏ –≤–∏–∫–ª–∏–∫–∞—é—Ç—å —Å–ø—Ä–∞–≤–∂–Ω—ñ –ø–æ–º–∏–ª–∫–∏.
        </Typography>
      </Alert>

      <Box sx={{ display: 'flex', gap: 2, flexWrap: 'wrap' }}>
        <Button
          variant="contained"
          color="primary"
          onClick={goToErrorPage}
          sx={{ minWidth: 200 }}
        >
          –ü–µ—Ä–µ–π—Ç–∏ –Ω–∞ —Å—Ç–æ—Ä—ñ–Ω–∫—É –ø–æ–º–∏–ª–∫–∏
        </Button>

        <Button
          variant="contained"
          color="error"
          onClick={triggerError}
          sx={{ minWidth: 200 }}
        >
          –í–∏–∫–ª–∏–∫–∞—Ç–∏ —Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É –ø–æ–º–∏–ª–∫—É
        </Button>

        <Button
          variant="outlined"
          color="error"
          onClick={triggerAsyncError}
          disabled={showError}
          sx={{ minWidth: 200 }}
        >
          {showError ? '–ü–æ–º–∏–ª–∫–∞ —á–µ—Ä–µ–∑ 1 —Å–µ–∫...' : '–í–∏–∫–ª–∏–∫–∞—Ç–∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω—É –ø–æ–º–∏–ª–∫—É'}
        </Button>
      </Box>

      <Box sx={{ mt: 3, p: 2, bgcolor: 'grey.50', borderRadius: 1 }}>
        <Typography variant="subtitle2" gutterBottom>
          –©–æ —Ç–µ—Å—Ç—É—î—Ç—å—Å—è:
        </Typography>
        <Typography variant="body2" component="div">
          ‚Ä¢ –í—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∫–æ–Ω—Ç–∞–∫—Ç–Ω–æ—ó —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –∑ —ñ–∫–æ–Ω–∫–æ—é üìß (teachsparkai@gmail.com)<br/>
          ‚Ä¢ –ü–æ—Å–∏–ª–∞–Ω–Ω—è –Ω–∞ –¢–µ–ª–µ–≥—Ä–∞–º –∑ —ñ–∫–æ–Ω–∫–æ—é üí¨ (@teachsparkai)<br/>
          ‚Ä¢ –ü—Ä–∞–≤–∏–ª—å–Ω–µ —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –ø—Ä–æ –ø–æ–º–∏–ª–∫—É<br/>
          ‚Ä¢ –§—É–Ω–∫—Ü—ñ–æ–Ω–∞–ª—å–Ω—ñ—Å—Ç—å –∫–Ω–æ–ø–æ–∫ "–°–ø—Ä–æ–±—É–≤–∞—Ç–∏ —â–µ —Ä–∞–∑" —Ç–∞ "–ù–∞ –≥–æ–ª–æ–≤–Ω—É"
        </Typography>
      </Box>
    </Box>
  );
};

const TestPage: React.FC = () => {
  const [tabValue, setTabValue] = useState(0);

  const handleTabChange = (event: React.SyntheticEvent, newValue: number) => {
    setTabValue(newValue);
  };

  return (
    <Layout>
      <Container maxWidth="lg">
        <Box sx={{ py: 4 }}>
          <Typography variant="h4" component="h1" gutterBottom>
            üß™ Test Suite
          </Typography>
          
          <Typography variant="body1" sx={{ mb: 3 }}>
            This page contains various tests for different components and features.
          </Typography>

          <Box sx={{ borderBottom: 1, borderColor: 'divider', mb: 3 }}>
            <Tabs value={tabValue} onChange={handleTabChange} aria-label="test tabs">
              <Tab label="üñºÔ∏è SnapDOM Thumbnails" />
              <Tab label="‚ùå Error Testing" />
            </Tabs>
          </Box>

          <TabPanel value={tabValue} index={0}>
            <SnapdomTest />
          </TabPanel>

          <TabPanel value={tabValue} index={1}>
            <ErrorTestComponent />
          </TabPanel>
        </Box>
      </Container>
    </Layout>
  );
};

export default TestPage;
