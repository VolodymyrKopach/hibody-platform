import { IIntentHandler } from './IIntentHandler';
import { ConversationHistory, ChatResponse } from '../types';
import { IntentDetectionResult, UserIntent } from '../../intent/IIntentDetectionService';
import { GeminiContentService } from '../../content/GeminiContentService';

// Single Responsibility: –û–±—Ä–æ–±–∫–∞ —Ä–µ–¥–∞–≥—É–≤–∞–Ω–Ω—è –ø–ª–∞–Ω—É
export class EditPlanHandler implements IIntentHandler {
  private contentService: GeminiContentService;

  constructor() {
    const apiKey = process.env.GEMINI_API_KEY;
    if (!apiKey) {
      throw new Error('Gemini API key not found in environment variables (GEMINI_API_KEY)');
    }
    this.contentService = new GeminiContentService();
  }
  
  canHandle(intent: IntentDetectionResult, conversationHistory?: ConversationHistory): boolean {
    return intent.intent === UserIntent.EDIT_PLAN || 
           conversationHistory?.step === 'plan_editing';
  }

  async handle(intent: IntentDetectionResult, conversationHistory?: ConversationHistory): Promise<ChatResponse> {
    // Handle case when user wants to edit plan but no conversation history exists
    if (!conversationHistory || !conversationHistory.planningResult) {
      return {
        success: true,
        message: `ü§î –°—Ö–æ–∂–µ, –≤–∏ —Ö–æ—á–µ—Ç–µ –ø–æ–∫—Ä–∞—â–∏—Ç–∏ –ø–ª–∞–Ω —É—Ä–æ–∫—É, –∞–ª–µ –Ω–∞—Ä–∞–∑—ñ –Ω–µ–º–∞—î –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–ª–∞–Ω—É.

üí° **–î–∞–≤–∞–π—Ç–µ —Å—Ç–≤–æ—Ä–∏–º–æ –Ω–æ–≤–∏–π –ø–ª–∞–Ω!** –°–∫–∞–∂—ñ—Ç—å –º–µ–Ω—ñ:
‚Ä¢ –ü—Ä–æ —â–æ –º–∞—î –±—É—Ç–∏ —É—Ä–æ–∫? (—Ç–µ–º–∞)
‚Ä¢ –î–ª—è —è–∫–æ–≥–æ –≤—ñ–∫—É –¥—ñ—Ç–µ–π? (–≤—ñ–∫)

**–ü—Ä–∏–∫–ª–∞–¥:** "–°—Ç–≤–æ—Ä–∏ —É—Ä–æ–∫ –ø—Ä–æ –¥–∏–Ω–æ–∑–∞–≤—Ä—ñ–≤ –¥–ª—è –¥—ñ—Ç–µ–π 6 —Ä–æ–∫—ñ–≤"`,
        conversationHistory: undefined,
        actions: []
      };
    }

    console.log('üîß Processing plan modifications with Gemini 2.5 Flash...');
    
    try {
      // –í–∏—Ç—è–≥—É—î–º–æ –∑–º—ñ–Ω–∏ –∑ –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
      const userChanges = this.extractChangesFromMessage(intent.parameters.rawMessage);
      
              // –ì–µ–Ω–µ—Ä—É—î–º–æ –æ–Ω–æ–≤–ª–µ–Ω–∏–π –ø–ª–∞–Ω –∑ Gemini 2.5 Flash
      const updatedPlan = await this.contentService.generateEditedPlan(
        conversationHistory.planningResult!,
        userChanges,
        conversationHistory.lessonTopic || '—É—Ä–æ–∫',
        conversationHistory.lessonAge || '6-8 —Ä–æ–∫—ñ–≤'
      );

      const newConversationHistory: ConversationHistory = {
        ...conversationHistory,
        step: 'planning',
        planningResult: updatedPlan
      };

      return {
        success: true,
        message: `‚ú® **–ü–ª–∞–Ω –æ–Ω–æ–≤–ª–µ–Ω–æ –∑–∞ –¥–æ–ø–æ–º–æ–≥–æ—é –®–Ü!**

${updatedPlan}`,
        conversationHistory: newConversationHistory,
        actions: [
          {
            action: 'approve_plan',
            label: '‚úÖ –°—Ö–≤–∞–ª–∏—Ç–∏ –ø–ª–∞–Ω —ñ –≥–µ–Ω–µ—Ä—É–≤–∞—Ç–∏ —Å–ª–∞–π–¥–∏',
            description: '–°—Ö–≤–∞–ª–∏—Ç–∏ –æ–Ω–æ–≤–ª–µ–Ω–∏–π –ø–ª–∞–Ω —ñ –ø–æ—á–∞—Ç–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–ª–∞–π–¥—ñ–≤'
          }
        ]
      };
    } catch (error) {
      console.error('‚ùå Error updating plan with Gemini 2.5 Flash:', error);
      
      return {
        success: false,
        message: `üòî –í–∏–Ω–∏–∫–ª–∞ –ø–æ–º–∏–ª–∫–∞ –ø—Ä–∏ –æ–Ω–æ–≤–ª–µ–Ω–Ω—ñ –ø–ª–∞–Ω—É. –°–ø—Ä–æ–±—É–π—Ç–µ —â–µ —Ä–∞–∑.

**–ü–æ–º–∏–ª–∫–∞:** ${error instanceof Error ? error.message : '–ù–µ–≤—ñ–¥–æ–º–∞ –ø–æ–º–∏–ª–∫–∞'}

üí° **–ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∞:** –°–ø—Ä–æ–±—É–π—Ç–µ –ø–µ—Ä–µ—Ñ–æ—Ä–º—É–ª—é–≤–∞—Ç–∏ –≤–∞—à—ñ –∑–º—ñ–Ω–∏ –∞–±–æ —Å—Ç–≤–æ—Ä–∏—Ç–∏ –Ω–æ–≤–∏–π –ø–ª–∞–Ω.`,
        conversationHistory,
        actions: []
      };
    }
  }

  private extractChangesFromMessage(rawMessage: string): string {
    // –í–∏–¥–∞–ª—è—î–º–æ –ø—Ä–µ—Ñ—ñ–∫—Å —è–∫—â–æ –≤—ñ–Ω —î
    const cleanMessage = rawMessage.replace(/^–í–Ω–µ—Å—Ç–∏ –Ω–∞—Å—Ç—É–ø–Ω—ñ –∑–º—ñ–Ω–∏ –¥–æ –ø–ª–∞–Ω—É:\s*/i, '');
    return cleanMessage.trim();
  }


} 