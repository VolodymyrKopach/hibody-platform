// Service for content generation using Claude Sonnet
import { processSlideWithImages, type ProcessedSlideData } from '@/utils/slideImageProcessor';

export class ClaudeSonnetContentService {
  private readonly apiKey: string;
  private readonly apiUrl: string = 'https://api.anthropic.com/v1/messages';

  constructor(apiKey: string) {
    this.apiKey = apiKey;
  }

  async generateLessonPlan(topic: string, age: string, language: string = 'uk'): Promise<string> {
    if (!this.apiKey) {
      throw new Error('Claude API key not configured');
    }

    console.log('üîê Claude API key present:', this.apiKey ? 'Yes' : 'No');
    console.log('üîê API key length:', this.apiKey?.length || 0);
    console.log('üîê API key starts with:', this.apiKey?.substring(0, 10) + '...');

    const prompt = this.buildLessonPlanPrompt(topic, age, language);

    console.log('üìù Generated prompt length:', prompt.length);
    console.log('üéØ API request details:', {
      model: 'claude-sonnet-4-20250514',
      max_tokens: 12000,
      temperature: 0.7,
      url: this.apiUrl
    });

    try {
      const response = await fetch(this.apiUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'x-api-key': this.apiKey,
          'anthropic-version': '2023-06-01',
        },
        body: JSON.stringify({
          model: 'claude-sonnet-4-20250514', // Claude Sonnet 4 - –Ω–∞–π–Ω–æ–≤—ñ—à–∞ –º–æ–¥–µ–ª—å
          max_tokens: 12000, // –ó–±—ñ–ª—å—à—É—î–º–æ –ª—ñ–º—ñ—Ç —Ç–æ–∫–µ–Ω—ñ–≤ –¥–ª—è –ø–æ–≤–Ω–∏—Ö –ø–ª–∞–Ω—ñ–≤
          temperature: 0.7,
          messages: [{ role: 'user', content: prompt }]
        })
      });

      if (!response.ok) {
        const errorData = await response.json().catch(() => null);
        console.error('üî• Claude API Error Details:', {
          status: response.status,
          statusText: response.statusText,
          errorData: errorData,
          requestModel: 'claude-sonnet-4-20250514',
          requestTokens: 12000
        });
        throw new Error(`Claude API error: ${response.status} ${response.statusText} - ${errorData?.error?.message || 'Unknown error'}`);
      }

      const data = await response.json();
      const content = data.content[0]?.text;

      if (!content) {
        throw new Error('No content in Claude response');
      }

      console.log(`üìè Generated lesson plan length: ${content.length} characters`);
      console.log(`üìä Response usage:`, data.usage);
      
      // Check if content was truncated
      if (data.usage?.output_tokens >= 11800) { // Close to max_tokens limit
        console.warn('‚ö†Ô∏è Content might be truncated due to token limit');
        console.warn('üîß Consider increasing max_tokens or refining prompt');
      }
      
      // Check for common truncation indicators
      if (content.includes('[TRUNCATED]') || 
          (content.includes('...') && content.length > 3000) ||
          !content.includes('–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó') ||
          !content.includes('–º–∞—Ç–µ—Ä—ñ–∞–ª–∏')) {
        console.warn('‚ö†Ô∏è Content appears to be truncated or incomplete');
        console.warn('üìù Content ending:', content.slice(-200));
      }

      return content;
    } catch (error) {
      console.error('Claude Sonnet content generation error:', error);
      throw error;
    }
  }

  private buildLessonPlanPrompt(topic: string, age: string, language: string): string {
    const prompts = {
      uk: `–í–∏ - –µ–∫—Å–ø–µ—Ä—Ç –∑ —Ä–æ–∑—Ä–æ–±–∫–∏ –æ—Å–≤—ñ—Ç–Ω—ñ—Ö –ø—Ä–æ–≥—Ä–∞–º –¥–ª—è –¥—ñ—Ç–µ–π. –°—Ç–≤–æ—Ä—ñ—Ç—å –¥–µ—Ç–∞–ª—å–Ω–∏–π —Ç–∞ –∑–∞—Ö–æ–ø–ª—é—é—á–∏–π –ø–ª–∞–Ω —É—Ä–æ–∫—É.

–í–•–Ü–î–ù–Ü –î–ê–ù–Ü:
- –¢–µ–º–∞: ${topic}
- –í—ñ–∫ –¥—ñ—Ç–µ–π: ${age}
- –ú–æ–≤–∞: —É–∫—Ä–∞—ó–Ω—Å—å–∫–∞

–í–ò–ú–û–ì–ò –î–û –ü–õ–ê–ù–£:
1. –£—Ä–æ–∫ –º–∞—î –±—É—Ç–∏ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏–º —Ç–∞ —Ü—ñ–∫–∞–≤–∏–º –¥–ª—è –¥—ñ—Ç–µ–π —Ü—å–æ–≥–æ –≤—ñ–∫—É
2. –í–∫–ª—é—á–∞—Ç–∏ —Ä—ñ–∑–Ω—ñ —Ç–∏–ø–∏ –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π (–Ω–∞–≤—á–∞–Ω–Ω—è, –≥—Ä–∞, –ø—Ä–∞–∫—Ç–∏–∫–∞)
3. –í—Ä–∞—Ö–æ–≤—É–≤–∞—Ç–∏ –≤—ñ–∫–æ–≤—ñ –æ—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ —Ä–æ–∑–≤–∏—Ç–∫—É
4. –ú—ñ—Å—Ç–∏—Ç–∏ 4-8 —Å–ª–∞–π–¥—ñ–≤ –∑–∞–ª–µ–∂–Ω–æ –≤—ñ–¥ —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ —Ç–µ–º–∏
5. –ö–æ–∂–µ–Ω —Å–ª–∞–π–¥ –º–∞—î –º–µ—Ç—É, –∑–º—ñ—Å—Ç —Ç–∞ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏
6. –í–ê–ñ–õ–ò–í–û: –í—Å—ñ —Å–ª–∞–π–¥–∏ –º–∞—é—Ç—å –±—É—Ç–∏ —Ä–æ–∑—Ä–æ–±–ª–µ–Ω—ñ –¥–ª—è —Å–ø—ñ–≤–≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω 4:3 (—Å—Ç–∞–Ω–¥–∞—Ä—Ç –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü—ñ–π)

–°–¢–†–£–ö–¢–£–†–ê –ü–õ–ê–ù–£:
- –ó–∞–≥–æ–ª–æ–≤–æ–∫ —Ç–∞ –º–µ—Ç–∞ —É—Ä–æ–∫—É
- –¢—Ä–∏–≤–∞–ª—ñ—Å—Ç—å
- –î–µ—Ç–∞–ª—å–Ω–∏–π –æ–ø–∏—Å –∫–æ–∂–Ω–æ–≥–æ —Å–ª–∞–π–¥—É –∑ —Ç–∏–ø–æ–º (–≤—Å—Ç—É–ø–Ω–∏–π, –Ω–∞–≤—á–∞–ª—å–Ω–∏–π, –∞–∫—Ç–∏–≤–Ω—ñ—Å—Ç—å, –ø—ñ–¥—Å—É–º–æ–∫)
- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—ó –¥–ª—è –≤–∏–∫–ª–∞–¥–∞–Ω–Ω—è

–°–¢–ò–õ–¨:
- –î—Ä—É–∂–µ–ª—é–±–Ω–∏–π —Ç–∞ –∑–∞—Ö–æ–ø–ª—é—é—á–∏–π
- –ê–¥–∞–ø—Ç–æ–≤–∞–Ω–∏–π –ø—ñ–¥ –≤—ñ–∫ –¥—ñ—Ç–µ–π
- –ó –ø—Ä–∞–∫—Ç–∏—á–Ω–∏–º–∏ –ø—Ä–∏–∫–ª–∞–¥–∞–º–∏
- –ó —ñ–≥—Ä–æ–≤–∏–º–∏ –µ–ª–µ–º–µ–Ω—Ç–∞–º–∏

–í–ê–ñ–õ–ò–í–û:
- –í—Ä–∞—Ö–æ–≤—É–π—Ç–µ –ø—Å–∏—Ö–æ–ª–æ–≥—ñ—á–Ω—ñ –æ—Å–æ–±–ª–∏–≤–æ—Å—Ç—ñ –≤—ñ–∫—É ${age}
- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–æ –¥–æ –∑–¥—ñ–±–Ω–æ—Å—Ç–µ–π –¥—ñ—Ç–µ–π
- –ó–∞–±–µ–∑–ø–µ—á—Ç–µ –ª–æ–≥—ñ—á–Ω—É –ø–æ—Å–ª—ñ–¥–æ–≤–Ω—ñ—Å—Ç—å –ø–æ–¥–∞—á—ñ –º–∞—Ç–µ—Ä—ñ–∞–ª—É
- –í–∫–ª—é—á—ñ—Ç—å –µ–ª–µ–º–µ–Ω—Ç–∏ –º–æ—Ç–∏–≤–∞—Ü—ñ—ó —Ç–∞ –∑–∞–æ—Ö–æ—á–µ–Ω–Ω—è
- –ü—Ä–∏ –ø–ª–∞–Ω—É–≤–∞–Ω–Ω—ñ –≤—ñ–∑—É–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É –≤—Ä–∞—Ö–æ–≤—É–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç —Å–ª–∞–π–¥—ñ–≤ 4:3

–°—Ç–≤–æ—Ä—ñ—Ç—å –ø–ª–∞–Ω —É —Ñ–æ—Ä–º–∞—Ç—ñ Markdown –∑ –¥–µ—Ç–∞–ª—å–Ω–∏–º–∏ –æ–ø–∏—Å–∞–º–∏ –∫–æ–∂–Ω–æ–≥–æ —Å–ª–∞–π–¥—É.`,

      en: `You are an expert in developing educational programs for children. Create a detailed and engaging lesson plan.

INPUT DATA:
- Topic: ${topic}
- Age: ${age}
- Language: English

REQUIREMENTS:
1. Lesson should be interactive and interesting for children of this age
2. Include different types of activities (learning, games, practice)
3. Consider age-specific developmental features
4. Include 4-8 slides depending on topic complexity
5. Each slide should have purpose, content, and interactive elements
6. IMPORTANT: All slides must be designed for 4:3 aspect ratio (presentation standard)

PLAN STRUCTURE:
- Title and lesson objectives
- Duration
- Detailed description of each slide with type (intro, educational, activity, summary)
- Teaching recommendations

STYLE:
- Friendly and engaging
- Age-appropriate
- With practical examples
- With game elements

IMPORTANT:
- Consider psychological features of age ${age}
- Use interactive elements appropriate for children's abilities
- Ensure logical sequence of material presentation
- Include motivation and encouragement elements
- When planning visual content, consider 4:3 slide format

Create the plan in Markdown format with detailed slide descriptions.`,

      ru: `–í—ã - —ç–∫—Å–ø–µ—Ä—Ç –ø–æ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ –æ–±—Ä–∞–∑–æ–≤–∞—Ç–µ–ª—å–Ω—ã—Ö –ø—Ä–æ–≥—Ä–∞–º–º –¥–ª—è –¥–µ—Ç–µ–π. –°–æ–∑–¥–∞–π—Ç–µ –¥–µ—Ç–∞–ª—å–Ω—ã–π –∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π –ø–ª–∞–Ω —É—Ä–æ–∫–∞.

–í–•–û–î–ù–´–ï –î–ê–ù–ù–´–ï:
- –¢–µ–º–∞: ${topic}
- –í–æ–∑—Ä–∞—Å—Ç –¥–µ—Ç–µ–π: ${age}
- –Ø–∑—ã–∫: —Ä—É—Å—Å–∫–∏–π

–¢–†–ï–ë–û–í–ê–ù–ò–Ø –ö –ü–õ–ê–ù–£:
1. –£—Ä–æ–∫ –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–º –∏ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–º –¥–ª—è –¥–µ—Ç–µ–π —ç—Ç–æ–≥–æ –≤–æ–∑—Ä–∞—Å—Ç–∞
2. –í–∫–ª—é—á–∞—Ç—å —Ä–∞–∑–Ω—ã–µ —Ç–∏–ø—ã –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π (–æ–±—É—á–µ–Ω–∏–µ, –∏–≥—Ä–∞, –ø—Ä–∞–∫—Ç–∏–∫–∞)
3. –£—á–∏—Ç—ã–≤–∞—Ç—å –≤–æ–∑—Ä–∞—Å—Ç–Ω—ã–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Ä–∞–∑–≤–∏—Ç–∏—è
4. –°–æ–¥–µ—Ä–∂–∞—Ç—å 4-8 —Å–ª–∞–π–¥–æ–≤ –≤ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –æ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ —Ç–µ–º—ã
5. –ö–∞–∂–¥—ã–π —Å–ª–∞–π–¥ –¥–æ–ª–∂–µ–Ω –∏–º–µ—Ç—å —Ü–µ–ª—å, —Å–æ–¥–µ—Ä–∂–∞–Ω–∏–µ –∏ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã
6. –í–ê–ñ–ù–û: –í—Å–µ —Å–ª–∞–π–¥—ã –¥–æ–ª–∂–Ω—ã –±—ã—Ç—å —Ä–∞–∑—Ä–∞–±–æ—Ç–∞–Ω—ã –¥–ª—è —Å–æ–æ—Ç–Ω–æ—à–µ–Ω–∏—è —Å—Ç–æ—Ä–æ–Ω 4:3 (—Å—Ç–∞–Ω–¥–∞—Ä—Ç –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü–∏–π)

–°–¢–†–£–ö–¢–£–†–ê –ü–õ–ê–ù–ê:
- –ó–∞–≥–æ–ª–æ–≤–æ–∫ –∏ —Ü–µ–ª—å —É—Ä–æ–∫–∞
- –ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å
- –î–µ—Ç–∞–ª—å–Ω–æ–µ –æ–ø–∏—Å–∞–Ω–∏–µ –∫–∞–∂–¥–æ–≥–æ —Å–ª–∞–π–¥–∞ —Å —Ç–∏–ø–æ–º (–≤—Å—Ç—É–ø–∏—Ç–µ–ª—å–Ω—ã–π, –æ–±—É—á–∞—é—â–∏–π, –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—å, –∏—Ç–æ–≥–æ–≤—ã–π)
- –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –¥–ª—è –ø—Ä–µ–ø–æ–¥–∞–≤–∞–Ω–∏—è

–°–¢–ò–õ–¨:
- –î—Ä—É–∂–µ–ª—é–±–Ω—ã–π –∏ —É–≤–ª–µ–∫–∞—Ç–µ–ª—å–Ω—ã–π
- –ê–¥–∞–ø—Ç–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–¥ –≤–æ–∑—Ä–∞—Å—Ç –¥–µ—Ç–µ–π
- –° –ø—Ä–∞–∫—Ç–∏—á–µ—Å–∫–∏–º–∏ –ø—Ä–∏–º–µ—Ä–∞–º–∏
- –° –∏–≥—Ä–æ–≤—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏

–í–ê–ñ–ù–û:
- –£—á–∏—Ç—ã–≤–∞–π—Ç–µ –ø—Å–∏—Ö–æ–ª–æ–≥–∏—á–µ—Å–∫–∏–µ –æ—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ –≤–æ–∑—Ä–∞—Å—Ç–∞ ${age}
- –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∏–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–µ —ç–ª–µ–º–µ–Ω—Ç—ã —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ —Å–ø–æ—Å–æ–±–Ω–æ—Å—Ç—è–º –¥–µ—Ç–µ–π
- –û–±–µ—Å–ø–µ—á—å—Ç–µ –ª–æ–≥–∏—á–µ—Å–∫—É—é –ø–æ—Å–ª–µ–¥–æ–≤–∞—Ç–µ–ª—å–Ω–æ—Å—Ç—å –ø–æ–¥–∞—á–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
- –í–∫–ª—é—á–∏—Ç–µ —ç–ª–µ–º–µ–Ω—Ç—ã –º–æ—Ç–∏–≤–∞—Ü–∏–∏ –∏ –ø–æ–æ—â—Ä–µ–Ω–∏—è
- –ü—Ä–∏ –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–∏ –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç–∞ —É—á–∏—Ç—ã–≤–∞–π—Ç–µ —Ñ–æ—Ä–º–∞—Ç —Å–ª–∞–π–¥–æ–≤ 4:3

–°–æ–∑–¥–∞–π—Ç–µ –ø–ª–∞–Ω –≤ —Ñ–æ—Ä–º–∞—Ç–µ Markdown —Å –¥–µ—Ç–∞–ª—å–Ω—ã–º–∏ –æ–ø–∏—Å–∞–Ω–∏—è–º–∏ –∫–∞–∂–¥–æ–≥–æ —Å–ª–∞–π–¥–∞.`
    };

    return prompts[language as keyof typeof prompts] || prompts.en;
  }

  async generateSlideContent(slideDescription: string, topic: string, age: string): Promise<string> {
    if (!this.apiKey) {
      throw new Error('Claude API key not configured');
    }

    const prompt = this.buildSlideContentPrompt(slideDescription, topic, age);

    try {
      console.log('üéØ Generating slide HTML with Claude...');
      
      const response = await fetch(this.apiUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'x-api-key': this.apiKey,
          'anthropic-version': '2023-06-01',
        },
        body: JSON.stringify({
          model: 'claude-sonnet-4-20250514', // Claude Sonnet 4
          max_tokens: 6000,
          temperature: 0.8,
          messages: [{ role: 'user', content: prompt }]
        })
      });

      if (!response.ok) {
        const errorData = await response.json().catch(() => null);
        console.error('üî• Claude Slide API Error Details:', {
          status: response.status,
          statusText: response.statusText,
          errorData: errorData
        });
        throw new Error(`Claude API error: ${response.status} ${response.statusText} - ${errorData?.error?.message || 'Unknown error'}`);
      }

      const data = await response.json();
      let content = data.content[0]?.text;

      if (!content) {
        throw new Error('No content in Claude response');
      }

      // –û—á–∏—â–∞—î–º–æ HTML –≤—ñ–¥ markdown –æ–±–≥–æ—Ä—Ç–∫–∏
      content = this.cleanHtmlFromMarkdown(content);
      console.log('‚úÖ Base slide HTML generated, length:', content.length);

      // –ù–û–í–ò–ô –ï–¢–ê–ü: –û–±—Ä–æ–±–ª—è—î–º–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è
      console.log('üé® Processing images in slide...');
      const imageProcessingResult: ProcessedSlideData = await processSlideWithImages(content);
      
      // –õ–æ–≥—É—î–º–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∏ –æ–±—Ä–æ–±–∫–∏ –∑–æ–±—Ä–∞–∂–µ–Ω—å
      if (imageProcessingResult.generatedImages.length > 0) {
        const successful = imageProcessingResult.generatedImages.filter(img => img.success).length;
        const failed = imageProcessingResult.generatedImages.length - successful;
        console.log(`üì∏ Image processing: ${successful} successful, ${failed} failed`);
      }
      
      // –í–∏–≤–æ–¥–∏–º–æ –ø–æ–º–∏–ª–∫–∏ —è–∫—â–æ —î
      if (imageProcessingResult.processingErrors.length > 0) {
        console.warn('‚ö†Ô∏è Image processing errors:', imageProcessingResult.processingErrors);
      }

      // –ü–æ–≤–µ—Ä—Ç–∞—î–º–æ HTML –∑ —ñ–Ω—Ç–µ–≥—Ä–æ–≤–∞–Ω–∏–º–∏ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è–º–∏
      const finalHtml = imageProcessingResult.htmlWithImages;
      console.log('‚úÖ Final slide with images ready, length:', finalHtml.length);

      return finalHtml;
    } catch (error) {
      console.error('Claude Sonnet slide generation error:', error);
      throw error;
    }
  }

  private cleanHtmlFromMarkdown(content: string): string {
    // –í–∏–¥–∞–ª—è—î–º–æ markdown –æ–±–≥–æ—Ä—Ç–∫—É ```html —Ç–∞ ```
    let cleanedContent = content.replace(/^```html\s*/i, '').replace(/\s*```$/i, '');
    
    // –í–∏–¥–∞–ª—è—î–º–æ –±—É–¥—å-—è–∫—ñ —ñ–Ω—à—ñ markdown –±–ª–æ–∫–∏
    cleanedContent = cleanedContent.replace(/^```[a-zA-Z]*\s*/gm, '').replace(/\s*```$/gm, '');
    
    // –í–∏–¥–∞–ª—è—î–º–æ –∑–∞–π–≤—ñ –ø—Ä–æ–±—ñ–ª–∏ —Ç–∞ –ø–µ—Ä–µ–Ω–æ—Å–∏ –Ω–∞ –ø–æ—á–∞—Ç–∫—É —Ç–∞ –∫—ñ–Ω—Ü—ñ
    cleanedContent = cleanedContent.trim();
    
    // –ü–µ—Ä–µ–∫–æ–Ω—É—î–º–æ—Å—è —â–æ –∫–æ–Ω—Ç–µ–Ω—Ç –ø–æ—á–∏–Ω–∞—î—Ç—å—Å—è –∑ <!DOCTYPE html> –∞–±–æ <html>
    if (!cleanedContent.match(/^\s*<!DOCTYPE\s+html/i) && !cleanedContent.match(/^\s*<html/i)) {
      console.warn('‚ö†Ô∏è HTML content does not start with DOCTYPE or html tag');
      console.warn('üìù Content preview:', cleanedContent.substring(0, 200));
    }
    
    return cleanedContent;
  }

  private buildSlideContentPrompt(slideDescription: string, topic: string, age: string): string {
    return `–í–∏ - –µ–∫—Å–ø–µ—Ä—Ç –∑ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏—Ö –æ—Å–≤—ñ—Ç–Ω—ñ—Ö —Å–ª–∞–π–¥—ñ–≤ –¥–ª—è –¥—ñ—Ç–µ–π.

–ó–ê–í–î–ê–ù–ù–Ø: –°—Ç–≤–æ—Ä—ñ—Ç—å –ø–æ–≤–Ω–∏–π HTML-–∫–æ–¥ –¥–ª—è —Å–ª–∞–π–¥—É –∑ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ—é –≥–µ–Ω–µ—Ä–∞—Ü—ñ—î—é –∑–æ–±—Ä–∞–∂–µ–Ω—å

–í–•–Ü–î–ù–Ü –î–ê–ù–Ü:
- –û–ø–∏—Å —Å–ª–∞–π–¥—É: ${slideDescription}
- –¢–µ–º–∞ —É—Ä–æ–∫—É: ${topic}
- –í—ñ–∫ –¥—ñ—Ç–µ–π: ${age}

–í–ò–ú–û–ì–ò –î–û –°–õ–ê–ô–î–£:
1. –ü–æ–≤–Ω–∏–π HTML-–¥–æ–∫—É–º–µ–Ω—Ç –∑ DOCTYPE
2. Responsive –¥–∏–∑–∞–π–Ω –∑ –±–∞–∑–æ–≤–∏–º —Å–ø—ñ–≤–≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è–º —Å—Ç–æ—Ä—ñ–Ω 4:3 (1024x768px –∞–±–æ 1280x960px)
3. –Ø—Å–∫—Ä–∞–≤—ñ –∫–æ–ª—å–æ—Ä–∏ —Ç–∞ –ø—Ä–∏–≤–∞–±–ª–∏–≤–∏–π –¥–∏–∑–∞–π–Ω
4. –Ü–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ (–∫–Ω–æ–ø–∫–∏, –∞–Ω—ñ–º–∞—Ü—ñ—ó, –µ—Ñ–µ–∫—Ç–∏)
5. –ê–¥–∞–ø—Ç–æ–≤–∞–Ω–∏–π –ø—ñ–¥ –≤—ñ–∫ ${age}
6. CSS –∞–Ω—ñ–º–∞—Ü—ñ—ó —Ç–∞ –ø–µ—Ä–µ—Ö–æ–¥–∏
7. –ü—Ä–æ—Å—Ç–∏–π —Ç–∞ –∑—Ä–æ–∑—É–º—ñ–ª–∏–π —ñ–Ω—Ç–µ—Ä—Ñ–µ–π—Å
8. –û–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∏–π –¥–ª—è –ø–µ—Ä–µ–≥–ª—è–¥—É –≤ —Ñ–æ—Ä–º–∞—Ç—ñ 4:3

–¢–ï–•–ù–Ü–ß–ù–Ü –í–ò–ú–û–ì–ò:
- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Å—É—á–∞—Å–Ω–∏–π CSS (Grid, Flexbox)
- –î–æ–¥–∞–π—Ç–µ JavaScript –¥–ª—è —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ
- –®—Ä–∏—Ñ—Ç: Comic Sans MS –∞–±–æ –ø–æ–¥—ñ–±–Ω–∏–π –¥–∏—Ç—è—á–∏–π
- –†–æ–∑–º—ñ—Ä: —Å–ø—ñ–≤–≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω 4:3 (—à–∏—Ä–∏–Ω–∞ x –≤–∏—Å–æ—Ç–∞)
- –ö–æ–ª—å–æ—Ä–∏: —è—Å–∫—Ä–∞–≤—ñ, –∞–ª–µ –ø—Ä–∏—î–º–Ω—ñ –¥–ª—è –æ—á–µ–π
- –ü—Ä–∏ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—ñ –º–∞–∫–µ—Ç—É –≤—Ä–∞—Ö–æ–≤—É–π—Ç–µ —â–æ —Å–ª–∞–π–¥ –±—É–¥–µ –≤—ñ–¥–æ–±—Ä–∞–∂–∞—Ç–∏—Å—è –≤ —Ñ–æ—Ä–º–∞—Ç—ñ 4:3

–ì–ï–ù–ï–†–ê–¶–Ü–Ø –ó–û–ë–†–ê–ñ–ï–ù–¨:
–í–ê–ñ–õ–ò–í–û! –î–ª—è –∫–æ–∂–Ω–æ–≥–æ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è —â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ –≤ —Å–ª–∞–π–¥—ñ, –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ —Å–ø–µ—Ü—ñ–∞–ª—å–Ω–∏–π HTML –∫–æ–º–µ–Ω—Ç–∞—Ä –ó–ê–ú–Ü–°–¢–¨ —Ç–µ–≥–∞ <img>:

–§–æ—Ä–º–∞—Ç –∫–æ–º–µ–Ω—Ç–∞—Ä—è:
<!-- IMAGE_PROMPT: "–æ–ø–∏—Å –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é" WIDTH: —à–∏—Ä–∏–Ω–∞ HEIGHT: –≤–∏—Å–æ—Ç–∞ -->

–ü—Ä–∏–∫–ª–∞–¥–∏:
<!-- IMAGE_PROMPT: "A colorful cartoon illustration of a friendly cat teaching mathematics to children, educational style, bright colors" WIDTH: 512 HEIGHT: 384 -->
<!-- IMAGE_PROMPT: "Simple drawing of geometric shapes (circle, square, triangle) for kids, colorful, educational poster style" WIDTH: 640 HEIGHT: 480 -->

–ü–†–ê–í–ò–õ–ê –î–õ–Ø –ó–û–ë–†–ê–ñ–ï–ù–¨:
- –ü—Ä–æ–º–ø—Ç –û–ë–û–í'–Ø–ó–ö–û–í–û –∞–Ω–≥–ª—ñ–π—Å—å–∫–æ—é –º–æ–≤–æ—é
- –®–∏—Ä–∏–Ω–∞ —Ç–∞ –≤–∏—Å–æ—Ç–∞ –ú–ê–Æ–¢–¨ –ë–£–¢–ò –∫—Ä–∞—Ç–Ω—ñ 16 (–≤–∏–º–æ–≥–∞ FLUX API)
- –†–µ–∫–æ–º–µ–Ω–¥–æ–≤–∞–Ω—ñ —Ä–æ–∑–º—ñ—Ä–∏: 512x384, 640x480, 768x576, 1024x768
- –û–ø–∏—Å –º–∞—î –±—É—Ç–∏ –æ—Å–≤—ñ—Ç–Ω—ñ–º —Ç–∞ –ø—ñ–¥—Ö–æ–¥—è—â–∏–º –¥–ª—è –¥—ñ—Ç–µ–π –≤—ñ–∫—É ${age}
- –°—Ç–∏–ª—å: cartoon, illustration, educational, child-friendly
- –ó–∞–≤–∂–¥–∏ –≤–∫–∞–∑—É–π—Ç–µ "for children" –∞–±–æ "educational" –≤ –ø—Ä–æ–º–ø—Ç—ñ
- –î–æ–¥–∞–≤–∞–π—Ç–µ "bright colors", "friendly", "safe for kids"

–ö–û–õ–ò –î–û–î–ê–í–ê–¢–ò –ó–û–ë–†–ê–ñ–ï–ù–ù–Ø:
- –î–ª—è —ñ–ª—é—Å—Ç—Ä–∞—Ü—ñ—ó –æ—Å–Ω–æ–≤–Ω–∏—Ö –∫–æ–Ω—Ü–µ–ø—Ü—ñ–π —Ç–µ–º–∏ ${topic}
- –î–ª—è –¥–µ–∫–æ—Ä–∞—Ç–∏–≤–Ω–∏—Ö –µ–ª–µ–º–µ–Ω—Ç—ñ–≤ —â–æ –ø–æ–∫—Ä–∞—â—É—é—Ç—å —Å–ø—Ä–∏–π–Ω—è—Ç—Ç—è
- –î–ª—è —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∏—Ö –∞–∫—Ç–∏–≤–Ω–æ—Å—Ç–µ–π
- –î–ª—è –≤—ñ–∑—É–∞–ª—ñ–∑–∞—Ü—ñ—ó –∞–±—Å—Ç—Ä–∞–∫—Ç–Ω–∏—Ö –ø–æ–Ω—è—Ç—å
- –ó–ê–í–ñ–î–ò –¥–æ–¥–∞–≤–∞–π—Ç–µ –ø—Ä–∏–Ω–∞–π–º–Ω—ñ 1-2 –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è –Ω–∞ —Å–ª–∞–π–¥

–°–¢–†–£–ö–¢–£–†–ê:
- <!DOCTYPE html>
- <head> –∑ meta —Ç–µ–≥–∞–º–∏ —Ç–∞ —Å—Ç–∏–ª—è–º–∏
- <body> –∑ –æ—Å–Ω–æ–≤–Ω–∏–º –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω–∏–º –¥–ª—è 4:3
- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ IMAGE_PROMPT –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ –∑–∞–º—ñ—Å—Ç—å <img> —Ç–µ–≥—ñ–≤
- JavaScript –¥–ª—è —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–æ—Å—Ç—ñ

–í–ê–ñ–õ–ò–í–û: 
- –ü–æ–≤–µ—Ä–Ω—ñ—Ç—å –¢–Ü–õ–¨–ö–ò —á–∏—Å—Ç–∏–π HTML-–∫–æ–¥ –±–µ–∑ –±—É–¥—å-—è–∫–∏—Ö –æ–±–≥–æ—Ä—Ç–æ–∫, –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ–≤ –∞–±–æ markdown —Ñ–æ—Ä–º–∞—Ç—É–≤–∞–Ω–Ω—è
- –í—ñ–¥–ø–æ–≤—ñ–¥—å –º–∞—î –ø–æ—á–∏–Ω–∞—Ç–∏—Å—è –∑ "<!DOCTYPE html>" —ñ –∑–∞–∫—ñ–Ω—á—É–≤–∞—Ç–∏—Å—è "</html>"
- –†–æ–∑–º—ñ—â—É–π—Ç–µ –∫–æ–Ω—Ç–µ–Ω—Ç –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º —Å–ø—ñ–≤–≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω 4:3 –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è
- –í–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ viewport meta tag –∑ —É—Ä–∞—Ö—É–≤–∞–Ω–Ω—è–º —Ñ–æ—Ä–º–∞—Ç—É 4:3
- –ù–ï –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ <img> —Ç–µ–≥–∏ - —Ç—ñ–ª—å–∫–∏ IMAGE_PROMPT –∫–æ–º–µ–Ω—Ç–∞—Ä—ñ
- –ö–æ–∂–µ–Ω IMAGE_PROMPT –∫–æ–º–µ–Ω—Ç–∞—Ä –±—É–¥–µ –∞–≤—Ç–æ–º–∞—Ç–∏—á–Ω–æ –∑–∞–º—ñ–Ω–µ–Ω–∏–π –Ω–∞ —Ä–µ–∞–ª—å–Ω–µ –∑–æ–±—Ä–∞–∂–µ–Ω–Ω—è`;
  }

  async generateEditedPlan(currentPlan: string, userChanges: string, topic: string, age: string): Promise<string> {
    if (!this.apiKey) {
      throw new Error('Claude API key not configured');
    }

    const prompt = `–¢–∏ –µ–∫—Å–ø–µ—Ä—Ç –∑ –ø–µ–¥–∞–≥–æ–≥—ñ–∫–∏ —Ç–∞ —Å—Ç–≤–æ—Ä–µ–Ω–Ω—è –æ—Å–≤—ñ—Ç–Ω—ñ—Ö –º–∞—Ç–µ—Ä—ñ–∞–ª—ñ–≤ –¥–ª—è –¥—ñ—Ç–µ–π. 

**–ó–ê–í–î–ê–ù–ù–Ø:** –û–Ω–æ–≤–∏—Ç–∏ —ñ—Å–Ω—É—é—á–∏–π –ø–ª–∞–Ω —É—Ä–æ–∫—É –∑–≥—ñ–¥–Ω–æ –∑ –ø–æ–±–∞–∂–∞–Ω–Ω—è–º–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞.

**–ü–û–¢–û–ß–ù–ò–ô –ü–õ–ê–ù:**
${currentPlan}

**–ó–ú–Ü–ù–ò –í–Ü–î –ö–û–†–ò–°–¢–£–í–ê–ß–ê:**
${userChanges}

**–ö–û–ù–¢–ï–ö–°–¢:**
- –¢–µ–º–∞ —É—Ä–æ–∫—É: ${topic}
- –í—ñ–∫ –¥—ñ—Ç–µ–π: ${age}

**–Ü–ù–°–¢–†–£–ö–¶–Ü–á:**
1. –ü—Ä–æ–∞–Ω–∞–ª—ñ–∑—É–π –ø–æ—Ç–æ—á–Ω–∏–π –ø–ª–∞–Ω —ñ –∑–º—ñ–Ω–∏ –∫–æ—Ä–∏—Å—Ç—É–≤–∞—á–∞
2. –í–Ω–µ—Å–∏ –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω—ñ –º–æ–¥–∏—Ñ—ñ–∫–∞—Ü—ñ—ó –∑–±–µ—Ä—ñ–≥–∞—é—á–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞ —è–∫—ñ—Å—Ç—å
3. –ü–µ—Ä–µ–∫–æ–Ω–∞–π—Å—è —â–æ –ø–ª–∞–Ω –∑–∞–ª–∏—à–∞—î—Ç—å—Å—è –ø–µ–¥–∞–≥–æ–≥—ñ—á–Ω–æ –æ–±“ë—Ä—É–Ω—Ç–æ–≤–∞–Ω–∏–º
4. –ó–±–µ—Ä—ñ–≥–∞–π –≤—ñ–¥–ø–æ–≤—ñ–¥–Ω–∏–π –≤—ñ–∫—É —Ä—ñ–≤–µ–Ω—å —Å–∫–ª–∞–¥–Ω–æ—Å—Ç—ñ
5. –Ø–∫—â–æ –∑–º—ñ–Ω–∏ —Å—É–ø–µ—Ä–µ—á–∞—Ç—å –ø–µ–¥–∞–≥–æ–≥—ñ—á–Ω–∏–º –ø—Ä–∏–Ω—Ü–∏–ø–∞–º, –∑–∞–ø—Ä–æ–ø–æ–Ω—É–π –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–∏
6. –í–ê–ñ–õ–ò–í–û: –í—Ä–∞—Ö–æ–≤—É–π —â–æ –≤—Å—ñ —Å–ª–∞–π–¥–∏ –º–∞—é—Ç—å –±—É—Ç–∏ –æ–ø—Ç–∏–º—ñ–∑–æ–≤–∞–Ω—ñ –¥–ª—è —Å–ø—ñ–≤–≤—ñ–¥–Ω–æ—à–µ–Ω–Ω—è —Å—Ç–æ—Ä—ñ–Ω 4:3

**–§–û–†–ú–ê–¢ –í–Ü–î–ü–û–í–Ü–î–Ü:**
–ù–∞–¥–∞–π –æ–Ω–æ–≤–ª–µ–Ω–∏–π –ø–ª–∞–Ω —É —Ç–æ–º—É –∂ —Ñ–æ—Ä–º–∞—Ç—ñ —â–æ –π –æ—Ä–∏–≥—ñ–Ω–∞–ª, –∑ —á—ñ—Ç–∫–æ—é —Å—Ç—Ä—É–∫—Ç—É—Ä–æ—é —Å–ª–∞–π–¥—ñ–≤ 1-6, —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü—ñ—è–º–∏ –¥–ª—è –≤—á–∏—Ç–µ–ª—è, –Ω–µ–æ–±—Ö—ñ–¥–Ω–∏–º–∏ –º–∞—Ç–µ—Ä—ñ–∞–ª–∞–º–∏ —Ç–∞ –æ—á—ñ–∫—É–≤–∞–Ω–∏–º–∏ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏.

**–î–û–î–ê–¢–ö–û–í–Ü –í–ò–ú–û–ì–ò:**
- –ü—Ä–∏ –ø–ª–∞–Ω—É–≤–∞–Ω–Ω—ñ –≤—ñ–∑—É–∞–ª—å–Ω–æ–≥–æ –∫–æ–Ω—Ç–µ–Ω—Ç—É –≤—Ä–∞—Ö–æ–≤—É–π —Ñ–æ—Ä–º–∞—Ç —Å–ª–∞–π–¥—ñ–≤ 4:3
- –í—Å—ñ —ñ–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ñ –µ–ª–µ–º–µ–Ω—Ç–∏ –º–∞—é—Ç—å –±—É—Ç–∏ –∞–¥–∞–ø—Ç–æ–≤–∞–Ω—ñ –ø—ñ–¥ –ø—Ä–µ–∑–µ–Ω—Ç–∞—Ü—ñ–π–Ω–∏–π —Ñ–æ—Ä–º–∞—Ç 4:3
- –†–æ–∑–º—ñ—â–µ–Ω–Ω—è –∫–æ–Ω—Ç–µ–Ω—Ç—É –ø–æ–≤–∏–Ω–Ω–æ –≤—Ä–∞—Ö–æ–≤—É–≤–∞—Ç–∏ –ø—Ä–æ–ø–æ—Ä—Ü—ñ—ó 4:3 –¥–ª—è –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–≥–æ –≤—ñ–¥–æ–±—Ä–∞–∂–µ–Ω–Ω—è

**–û–ù–û–í–õ–ï–ù–ò–ô –ü–õ–ê–ù –£–†–û–ö–£:**`;

    try {
      const response = await fetch(this.apiUrl, {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json',
          'x-api-key': this.apiKey,
          'anthropic-version': '2023-06-01',
        },
        body: JSON.stringify({
          model: 'claude-sonnet-4-20250514', // Claude Sonnet 4
          max_tokens: 8000,
          temperature: 0.7,
          messages: [{ role: 'user', content: prompt }]
        })
      });

      if (!response.ok) {
        const errorData = await response.json().catch(() => null);
        console.error('üî• Claude Edit Plan API Error Details:', {
          status: response.status,
          statusText: response.statusText,
          errorData: errorData
        });
        throw new Error(`Claude API error: ${response.status} ${response.statusText} - ${errorData?.error?.message || 'Unknown error'}`);
      }

      const data = await response.json();
      const content = data.content[0]?.text;

      if (!content) {
        throw new Error('No content in Claude response');
      }

      console.log(`üìè Generated edited plan length: ${content.length} characters`);
      console.log(`üìä Response usage:`, data.usage);

      return content;
    } catch (error) {
      console.error('Claude Sonnet plan editing error:', error);
      throw error;
    }
  }
} 